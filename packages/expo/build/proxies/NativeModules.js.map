{"version":3,"file":"NativeModules.js","sourceRoot":"","sources":["../../src/proxies/NativeModules.ts"],"names":[],"mappings":"AAAA,MAAM,iBAAiB,GAAa;IAClC,gBAAgB;IAChB,eAAe;IACf,2BAA2B;IAC3B,sBAAsB;IACtB,UAAU;CACX,CAAC;AACF,MAAM,kBAAkB,GAAa,EAAE,CAAC;AAExC,SAAS,gCAAgC,CAAC,UAAkB;IAC1D,OAAO,yDAAyD,UAAU;;+BAE7C,UAAU,0HAA0H,CAAC;AACpK,CAAC;AAED,SAAS,qCAAqC,CAAC,UAAkB;IAC/D,OAAO,yDAAyD,UAAU;;+NAEmJ,CAAC;AAChO,CAAC;AAED,MAAM,UAAU,2BAA2B,CAAC,aAAkB;IAC5D,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,aAAa,CAAC;KACtB;IACD,OAAO,IAAI,KAAK,CAAC,aAAa,EAAE;QAC9B,GAAG,CAAC,MAAM,EAAE,IAAI;YACd,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,IACE,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;gBACvC,2FAA2F;gBAC3F,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC5C,gDAAgD;gBAChD,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAC7C;gBACA,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAEzC,MAAM,sBAAsB,GAC1B,MAAM,CAAC,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,iBAAiB;oBACzE,EAAE,oBAAoB,KAAK,aAAa;oBAC1C,MAAM,CAAC,oBAAoB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,oBAAoB;wBACpF,aAAa,CAAC;gBAClB,IAAI,sBAAsB,EAAE;oBAC1B,OAAO,CAAC,KAAK,CAAC,gCAAgC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAClE;qBAAM,IAAI,MAAM,CAAC,aAAa,EAAE;oBAC/B,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;iBACvE;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["const MODULES_TO_IGNORE: string[] = [\n  'DevLoadingView',\n  'EXDevLauncher',\n  'EXReactNativeEventEmitter',\n  'NativeUnimoduleProxy',\n  '$$typeof',\n];\nconst hasWarnedForModule: string[] = [];\n\nfunction createErrorMessageForStoreClient(moduleName: string) {\n  return `Your JavaScript code tried to access a native module, ${moduleName}, that isn't supported in Expo Go.\n\nTo continue development with ${moduleName}, you need to create a development build of your app. See https://docs.expo.dev/development/introduction/ for more info.`;\n}\n\nfunction createErrorMessageForDevelopmentBuild(moduleName: string) {\n  return `Your JavaScript code tried to access a native module, ${moduleName}, that doesn't exist in this development build.\n\nMake sure you are using the newest available development build of this app and running a compatible version of your JavaScript code. If you've installed a new library recently, you may need to make a new development build.`;\n}\n\nexport function createProxyForNativeModules(NativeModules: any) {\n  if (!__DEV__) {\n    return NativeModules;\n  }\n  return new Proxy(NativeModules, {\n    get(target, prop) {\n      const value = target[prop];\n      if (\n        (value === null || value === undefined) &&\n        // don't warn on places where the expo package tries to access NativeModules with fallbacks\n        !MODULES_TO_IGNORE.includes(prop.toString()) &&\n        // only want to show the warning once per module\n        !hasWarnedForModule.includes(prop.toString())\n      ) {\n        hasWarnedForModule.push(prop.toString());\n\n        const isRunningInStoreClient =\n          global.ExpoModules?.NativeModulesProxy?.modulesConstants?.ExponentConstants\n            ?.executionEnvironment === 'storeClient' ||\n          target.NativeUnimoduleProxy?.modulesConstants?.ExponentConstants?.executionEnvironment ===\n            'storeClient';\n        if (isRunningInStoreClient) {\n          console.error(createErrorMessageForStoreClient(prop.toString()));\n        } else if (target.EXDevLauncher) {\n          console.error(createErrorMessageForDevelopmentBuild(prop.toString()));\n        }\n      }\n      return value;\n    },\n  });\n}\n"]}